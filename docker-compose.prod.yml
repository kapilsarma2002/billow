version: '3.8'

services:
  postgres:
    image: postgres:15
    container_name: billow-postgres-prod
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-billow}
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/setup_database.sql:/docker-entrypoint-initdb.d/setup_database.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-postgres}"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped
    networks:
      - billow-network

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: billow-backend-prod
    environment:
      DATABASE_URL: ${DATABASE_URL}
      PORT: ${PORT:-8080}
      HOST: ${HOST:-0.0.0.0}
      JWT_SECRET: ${JWT_SECRET}
      ALLOWED_ORIGINS: ${ALLOWED_ORIGINS}
      RATE_LIMIT_REQUESTS: ${RATE_LIMIT_REQUESTS:-100}
      RATE_LIMIT_WINDOW: ${RATE_LIMIT_WINDOW:-15m}
    ports:
      - "8080:8080"
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - billow-network

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: billow-frontend-prod
    environment:
      VITE_API_BASE_URL: ${VITE_API_BASE_URL}
      VITE_CLERK_PUBLISHABLE_KEY: ${VITE_CLERK_PUBLISHABLE_KEY}
      VITE_NODE_ENV: production
    ports:
      - "80:80"
    depends_on:
      - backend
    restart: unless-stopped
    networks:
      - billow-network

volumes:
  postgres_data:

networks:
  billow-network:
    driver: bridge 